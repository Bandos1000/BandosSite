{
  "version": 3,
  "sources": ["../../lib/oembed.ts"],
  "sourcesContent": ["import { getPageTitle, parsePageId } from 'notion-utils'\n\nimport * as config from './config'\nimport { getPage } from './notion'\n\nexport const oembed = async ({\n  url,\n  maxWidth,\n  maxHeight,\n  dark = false\n}: {\n  url: string\n  maxWidth?: number\n  maxHeight?: number\n  dark?: boolean\n}) => {\n  // TODO: handle pages with no pageId via domain\n  const pageId = parsePageId(url)\n\n  let title = config.name\n  let authorName = config.author\n\n  // TODO: handle errors gracefully\n\n  const page = await getPage(pageId)\n  const pageTitle = getPageTitle(page)\n  if (pageTitle) title = pageTitle\n\n  const user = page.notion_user[Object.keys(page.notion_user)[0]]?.value\n  const name = [user.given_name, user.family_name]\n    .filter(Boolean)\n    .join(' ')\n    .trim()\n  if (name) authorName = name\n\n  const params: any = { lite: 'true' }\n  if (dark) {\n    params.dark = 'true'\n  }\n\n  const query = new URLSearchParams(params).toString()\n  const embedUrl = `${config.host}/${pageId}?${query}`\n  const defaultWidth = 800\n  const defaultHeight = 600\n  const width = maxWidth ? Math.min(maxWidth, defaultWidth) : defaultWidth\n  const height = maxHeight ? Math.min(maxHeight, defaultHeight) : defaultHeight\n\n  return {\n    version: '1.0',\n    type: 'rich',\n    provider_name: config.author,\n    provider_url: config.host,\n    title,\n    author_name: authorName,\n    url,\n    // TODO\n    // thumbnail_url: 'https://repl.it/public/images/replit-logo-800x600.png',\n    // thumbnail_width: 800,\n    // thumbnail_height: 600,\n    width,\n    height,\n    html: `<iframe src=\"${embedUrl}\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts\" width=\"${width}\" height=\"${height}\" frameborder=\"0\"></iframe>`\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA0C;AAE1C,aAAwB;AACxB,oBAAwB;AAEjB,MAAM,SAAS,OAAO;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO;AACT,MAKM;AAfN;AAiBE,QAAM,aAAS,iCAAY,GAAG;AAE9B,MAAI,QAAQ,OAAO;AACnB,MAAI,aAAa,OAAO;AAIxB,QAAM,OAAO,UAAM,uBAAQ,MAAM;AACjC,QAAM,gBAAY,kCAAa,IAAI;AACnC,MAAI;AAAW,YAAQ;AAEvB,QAAM,QAAO,UAAK,YAAY,OAAO,KAAK,KAAK,WAAW,EAAE,QAA/C,mBAAoD;AACjE,QAAM,OAAO,CAAC,KAAK,YAAY,KAAK,WAAW,EAC5C,OAAO,OAAO,EACd,KAAK,GAAG,EACR,KAAK;AACR,MAAI;AAAM,iBAAa;AAEvB,QAAM,SAAc,EAAE,MAAM,OAAO;AACnC,MAAI,MAAM;AACR,WAAO,OAAO;AAAA,EAChB;AAEA,QAAM,QAAQ,IAAI,gBAAgB,MAAM,EAAE,SAAS;AACnD,QAAM,WAAW,GAAG,OAAO,QAAQ,UAAU;AAC7C,QAAM,eAAe;AACrB,QAAM,gBAAgB;AACtB,QAAM,QAAQ,WAAW,KAAK,IAAI,UAAU,YAAY,IAAI;AAC5D,QAAM,SAAS,YAAY,KAAK,IAAI,WAAW,aAAa,IAAI;AAEhE,SAAO;AAAA,IACL,SAAS;AAAA,IACT,MAAM;AAAA,IACN,eAAe,OAAO;AAAA,IACtB,cAAc,OAAO;AAAA,IACrB;AAAA,IACA,aAAa;AAAA,IACb;AAAA,IAKA;AAAA,IACA;AAAA,IACA,MAAM,gBAAgB,0GAA0G,kBAAkB;AAAA,EACpJ;AACF;",
  "names": []
}
