{
  "version": 3,
  "sources": ["../../lib/map-page-url.ts"],
  "sourcesContent": ["import { ExtendedRecordMap } from 'notion-types'\nimport { parsePageId, uuidToId } from 'notion-utils'\n\nimport { includeNotionIdInUrls } from './config'\nimport { getCanonicalPageId } from './get-canonical-page-id'\nimport { Site } from './types'\n\n// include UUIDs in page URLs during local development but not in production\n// (they're nice for debugging and speed up local dev)\nconst uuid = !!includeNotionIdInUrls\n\nexport const mapPageUrl =\n  (site: Site, recordMap: ExtendedRecordMap, searchParams: URLSearchParams) =>\n  (pageId = '') => {\n    const pageUuid = parsePageId(pageId, { uuid: true })\n\n    if (uuidToId(pageUuid) === site.rootNotionPageId) {\n      return createUrl('/', searchParams)\n    } else {\n      return createUrl(\n        `/${getCanonicalPageId(pageUuid, recordMap, { uuid })}`,\n        searchParams\n      )\n    }\n  }\n\nexport const getCanonicalPageUrl =\n  (site: Site, recordMap: ExtendedRecordMap) =>\n  (pageId = '') => {\n    const pageUuid = parsePageId(pageId, { uuid: true })\n\n    if (uuidToId(pageId) === site.rootNotionPageId) {\n      return `https://${site.domain}`\n    } else {\n      return `https://${site.domain}/${getCanonicalPageId(pageUuid, recordMap, {\n        uuid\n      })}`\n    }\n  }\n\nfunction createUrl(path: string, searchParams: URLSearchParams) {\n  return [path, searchParams.toString()].filter(Boolean).join('?')\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAsC;AAEtC,oBAAsC;AACtC,mCAAmC;AAKnC,MAAM,OAAO,CAAC,CAAC;AAER,MAAM,aACX,CAAC,MAAY,WAA8B,iBAC3C,CAAC,SAAS,OAAO;AACf,QAAM,eAAW,iCAAY,QAAQ,EAAE,MAAM,KAAK,CAAC;AAEnD,UAAI,8BAAS,QAAQ,MAAM,KAAK,kBAAkB;AAChD,WAAO,UAAU,KAAK,YAAY;AAAA,EACpC,OAAO;AACL,WAAO;AAAA,MACL,QAAI,iDAAmB,UAAU,WAAW,EAAE,KAAK,CAAC;AAAA,MACpD;AAAA,IACF;AAAA,EACF;AACF;AAEK,MAAM,sBACX,CAAC,MAAY,cACb,CAAC,SAAS,OAAO;AACf,QAAM,eAAW,iCAAY,QAAQ,EAAE,MAAM,KAAK,CAAC;AAEnD,UAAI,8BAAS,MAAM,MAAM,KAAK,kBAAkB;AAC9C,WAAO,WAAW,KAAK;AAAA,EACzB,OAAO;AACL,WAAO,WAAW,KAAK,cAAU,iDAAmB,UAAU,WAAW;AAAA,MACvE;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEF,SAAS,UAAU,MAAc,cAA+B;AAC9D,SAAO,CAAC,MAAM,aAAa,SAAS,CAAC,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG;AACjE;",
  "names": []
}
