{
  "version": 3,
  "sources": ["../../lib/types.ts"],
  "sourcesContent": ["import { ExtendedRecordMap, PageMap } from 'notion-types'\nimport { ParsedUrlQuery } from 'querystring'\n\nexport * from 'notion-types'\n\nexport type NavigationStyle = 'default' | 'custom'\n\nexport interface PageError {\n  message?: string\n  statusCode: number\n}\n\nexport interface PageProps {\n  site?: Site\n  recordMap?: ExtendedRecordMap\n  pageId?: string\n  error?: PageError\n}\n\nexport interface Params extends ParsedUrlQuery {\n  pageId: string\n}\n\nexport interface Site {\n  name: string\n  domain: string\n\n  rootNotionPageId: string\n  rootNotionSpaceId: string\n\n  // settings\n  html?: string\n  fontFamily?: string\n  darkMode?: boolean\n  previewImages?: boolean\n\n  // opengraph metadata\n  description?: string\n  image?: string\n}\n\nexport interface SiteMap {\n  site: Site\n  pageMap: PageMap\n  canonicalPageMap: CanonicalPageMap\n}\n\nexport interface CanonicalPageMap {\n  [canonicalPageId: string]: string\n}\n\nexport interface PageUrlOverridesMap {\n  // maps from a URL path to the notion page id the page should be resolved to\n  // (this overrides the built-in URL path generation for these pages)\n  [pagePath: string]: string\n}\n\nexport interface PageUrlOverridesInverseMap {\n  // maps from a notion page id to the URL path the page should be resolved to\n  // (this overrides the built-in URL path generation for these pages)\n  [pageId: string]: string\n}\n\nexport interface NotionPageInfo {\n  pageId: string\n  title: string\n  image: string\n  imageObjectPosition: string\n  author: string\n  authorImage: string\n  detail: string\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAGA,0BAAc,yBAHd;",
  "names": []
}
